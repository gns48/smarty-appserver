# Smarty appserver-ng configuration file
# We use well-known win.ini format

[common]

# number of working threads
# May be overlapped by the '--thcount' or '-t' command line option
threadcount = 2

# do we queue requests we can not process to files
# the "yes/no", "true/false" "on/off" options are valid for boolean value
# default -- 'yes'
# May by altered by '--noqeue' or '-n' command line switch
queue_requests = yes

# file queue root directory
queue_root = /var/spool/appserver

#pidfile
#pidfile = /var/run/appserver.pid
pidfile = /tmp/appserver.pid

#default reply in case of all workers busy (Denial of Service) 
dosreply = dos.html

# libmemcached options string. 
# See the http://docs.libmemcached.org/libmemcached_configuration.html page 
# for available options
memcached = --SERVER=localhost --TCP-KEEPALIVE
# use this line for libmemcached tuning or clustering
# memcached="--CONFIGURE-FILE=/usr/local/share/appserver/libmemcached.conf"

# FastCGI socket
# Uncomment this to use  unix domain socket
#fcgisocket = /tmp/appsocket
# or use TCP connection and listen on the following port. 
# The ':' symbol is mandatory due to FCGX_OpenSocket semantics
fcgisocket = :4885

# scripts location
scriptdir = ../script
# variable name to check to define script name to run
scriptselector = @0.function

[logging]
# syslog ID
logid = appserver

# syslog facility (LOCAL0 to LOCAL7), default -- 7
# Add the following line to the /etc/syslog.conf file
# local<facility>.*         /var/log/appserver.log
facility = 7

[smtp]

# SMTP server for outgoing mail.
# If not defined, application server will use the MX record for domain in it's FQDN
mailserver = smtp.smartypay.ru

# default sender (value for FROM: field in SMTP header)
sender = info@smartypay.ru

[script]

# All scripts we use.
# Format: <script name> = <script file>:<starting state number>
# So we allow scripts with more than one entry points

regex = regex.sl:100
file = file.sl:100
end = end.sl:200
query = query.sl:100
#match = match.sl:100
httptest = http.sl:100
#mail = mail.sl
#sms = sms.sl
#script = script.sl
#shell = shell.sl
login = login.sl:100

# section name corresponds to database descriptor in the QUERY state
[testdb]
# Database type (postgresql. mysql, oracle, etc)
# currently just postgresql is supported. 
dbtype = postgresql
dbname = smarty
dbuser = smarty
dbpswd = smarty
dbhost = 127.0.0.1
dbport = 5432

[sslkeys]
# key passwords for keys used for HTTPS protocol in the HTTP state
# If any SSL key or certificate used is protected with password, than define them here
# format:
# keyfile = password
# The keyfile string SHOLULD be the same as specified in pkey clause  
id_dsa = The very secure password









